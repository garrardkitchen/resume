<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Restful Api on GPK</title>
    <link>http://localhost:1313/tags/restful-api/</link>
    <description>Recent content in Restful Api on GPK</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 27 Apr 2020 11:14:39 +0100</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/restful-api/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Migrations</title>
      <link>http://localhost:1313/projects/creations/migrations/</link>
      <pubDate>Sun, 28 Apr 2019 17:16:53 +0100</pubDate>
      <guid>http://localhost:1313/projects/creations/migrations/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Migrate Coach product away from a monolyth to being 100% serverless.  Main web platform hosted via ECS Fargate and all features, RESTul APIs be Lambda backed API Gateways and Step Functions.  Data repositories used are dynamoDB, ElasticSearch, Amazon Aurora (mySQL), Redis and S3.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Coach migrated from MSSQL to MySQL as costs were too high for Always-On capabilities. I was accepted onto Aurora MySQL Preview programme and contributed to this phase.  The product had a key dependency that required a specific version of MySQL. As a result we are now using Amazon Aurora and plan to migrate over to  Aurora Serverless when version 5.7 is supported.&lt;/p&gt;</description>
    </item>
    <item>
      <title>SDK</title>
      <link>http://localhost:1313/projects/creations/sdk/</link>
      <pubDate>Sun, 28 Apr 2019 16:30:38 +0100</pubDate>
      <guid>http://localhost:1313/projects/creations/sdk/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;I created a process for others, external to the company, to perform integrations.  The concept is simple and still used today.&lt;/p&gt;&#xA;&lt;p&gt;In summary, a conduit known as a Data Connector was developed to (a) be used by Coach via a RESTful API and (b) integrate with Vendor or other system(s) APIs or data sources.  Metadata for users &amp;amp; recordings could then be exchanged via the Data Connector. Additional [configurable] data was also passed along this pipeline.  Multiple authentication protocols and approaches were used to permit the flow of data.  Data and required credentials were and are always encrypted.  The SDK is supported by a sample data connector, API documentation and a test bed via the Azure Platform.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Coach</title>
      <link>http://localhost:1313/projects/creations/coach/</link>
      <pubDate>Sun, 28 Apr 2019 16:13:20 +0100</pubDate>
      <guid>http://localhost:1313/projects/creations/coach/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;Created a web based product of our successful client/server product.&lt;/li&gt;&#xA;&lt;li&gt;Chose appropriate tech to fit the timeline.&lt;/li&gt;&#xA;&lt;li&gt;Worked with a Pakistani development outsourcing company and Recorder vendor that the product was integrating with at the time.  Later developing the application to integrate with the Redbox Recorder, leading Redbox to purchase the code after an agreed sign off.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
  </channel>
</rss>
