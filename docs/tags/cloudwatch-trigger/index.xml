<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cloudwatch trigger on GPK</title>
    <link>https://www.garrardkitchen.com/tags/cloudwatch-trigger/</link>
    <description>Recent content in cloudwatch trigger on GPK</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 28 Apr 2019 17:12:59 +0100</lastBuildDate><atom:link href="https://www.garrardkitchen.com/tags/cloudwatch-trigger/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Dashboard</title>
      <link>https://www.garrardkitchen.com/projects/creations/dashboard/</link>
      <pubDate>Sun, 28 Apr 2019 17:12:59 +0100</pubDate>
      
      <guid>https://www.garrardkitchen.com/projects/creations/dashboard/</guid>
      <description>I have researched several big data solutions but found them either too costly, lead time too lengthy or too complicated.
Coach needed something to present actionable data. Not knowing whether the idea matched reality, I proposed a phase 1 release that would lead to feature enhancements that would naturally lead to something that would help more. I architected an ETL and data analytics process that would generate separate JSON formatted data, persisted to S3 for a specific user after being processed by a Pandas dataframe.</description>
    </item>
    
    <item>
      <title>Health of the SaaS product</title>
      <link>https://www.garrardkitchen.com/projects/creations/health/</link>
      <pubDate>Sun, 28 Apr 2019 17:09:54 +0100</pubDate>
      
      <guid>https://www.garrardkitchen.com/projects/creations/health/</guid>
      <description>For me, CX (Customer Experience) is paramount. Even if there is an outage, the CX doesnâ€™t have to suffer. In my current project, there are key AWS services, as well as the CXcoach product, that are required to be running for the application to function. I have architected both full systems and application features in such a way for them not to fail because of transient outages or worse and furthermore to provide instant feedback to users.</description>
    </item>
    
  </channel>
</rss>
